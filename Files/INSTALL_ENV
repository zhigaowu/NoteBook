1, disable kernel update
   append 'exclude=kernel*' to the last of the configuration file:/etc/yum.conf

2, yum -y install wget
   yum -y install gcc gcc-c++ make
   
3, install ntfs-3g(for windows and linux filesystem mounting)
   wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
   yum -y install ntfs-3g

4, install nVidia 
   A, intall nVidia cuda
      I, disable nouveau
         append nouveau.modeset=0 to the end of the line GRUB_CMD_LINE_LINUX in file /etc/default/grup
      II, change grub configuration
         BIOS: grub2-mkconfig -o /boot/grub2/grub.cfg
         EFI:  grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg
      III, reboot
         
      IV, systemctl isolate multi-user.target and install
   B, install cudnn
      un-compress to cuda install path 


5, install zeroc ice
   cd /etc/yum.repos.d
   wget https://zeroc.com/download/Ice/3.7/el7/zeroc-ice3.7.repo

   yum -y install ice-all-runtime ice-all-devel
   [yum -y install libfreeze-c++-devel freeze-utils] depressed

6, install cmake
   download source
   gmake && make install

7, install soci
   cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DWITH_BOOST=OFF -DWITH_ORACLE=OFF -DWITH_SQLITE3=OFF -DWITH_POSTGRESQL=OFF -DWITH_ODBC=OFF -DWITH_FIREBIRD=OFF -DWITH_DB2=OFF -DSOCI_TESTS=OFF
   make && make install
   
8, install gflags & glog
   export CXXFLAGS="-fPIC" && export CFLAGS="-fPIC" && cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF -DWITH_GFLAGS=ON .. && make VERBOSE=1

9, install ffmpeg[CFLAGS=-fPIC CXXFLAGS=-fPIC CPPFLAGS=-fPIC * --extra-cflags=-fPIC --extra-cxxflags=-fPIC]
   guide: http://trac.ffmpeg.org/wiki/CompilationGuide/Centos

   I, install nasm & yasm
   II, yum -y install autoconf automake bzip2 bzip2-devel freetype-devel git libtool mercurial pkgconfig zlib-devel
   III, dependencies
      A, rtmp (git clone git://git.ffmpeg.org/rtmpdump)
         vi librtmp/Makefile (add -fPIC)
         make SHARED=
      B, git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git or https://github.com/FFmpeg/nv-codec-headers.git
         make && make install
      C, yum -y install cuda-toolkit-9-0 cuda-libraries-dev-9-0
      
      libvpx    ./configure --prefix="$HOME/ffmpeg_build" --extra-cflags=-fPIC --extra-cxxflags=-fPIC --disable-examples --enable-vp8 --disable-unit-tests --enable-vp9-highbitdepth --as=yasm
      libdc1394 ./configure --prefix="$HOME/ffmpeg_build" --disable-examples CFLAGS=-fPIC CPPFLAGS="-fPIC -I$HOME/ffmpeg_build/include/libusb-1.0" LDFLAGS="-L$HOME/ffmpeg_build/lib" LIBUSB_LIBS="$HOME/ffmpeg_build/lib"
      libmfx    PATH="$HOME/bin:$HOME/ffmpeg_build/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --prefix="$HOME/ffmpeg_build" CFLAGS=-fPIC CXXFLAGS=-fPIC CPPFLAGS=-fPIC      
         
      C, configure
PATH="$HOME/bin:$HOME/ffmpeg_build/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig:/usr/local/lib/pkgconfig" ./configure --prefix="$HOME/ffmpeg_build" --pkg-config-flags="--static" --extra-cflags="-I$HOME/ffmpeg_build/include -I/usr/local/include -I/usr/local/cuda/include" --extra-ldflags="-L$HOME/ffmpeg_build/lib -L/lib64 -L/usr/local/lib -L/usr/local/cuda/lib64" --extra-libs=-lpthread --extra-libs=-lm --extra-libs=-lusb-1.0 --extra-libs=-ldl --extra-libs=-ldrm --bindir="$HOME/bin" --enable-shared --disable-static --disable-doc --enable-vaapi --enable-encoder=h264_vaapi --enable-vdpau --enable-cuda --enable-cuvid --enable-nvenc --enable-libnpp --enable-libx264 --enable-libx265 --enable-libdc1394 --enable-libxvid --enable-libvpx --enable-librtmp --enable-libfdk-aac --enable-libopus --enable-gpl --enable-nonfree --enable-libmfx

PATH="$HOME/bin:$HOME/ffmpeg_build/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig:/usr/local/lib/pkgconfig" ./configure --prefix="/usr/local" --pkg-config-flags="--static" --extra-cflags="-I$HOME/ffmpeg_build/include -I/usr/local/include -I/usr/local/cuda/include" --extra-ldflags="-L$HOME/ffmpeg_build/lib -L/lib64 -L/usr/local/lib -L/usr/local/cuda/lib64" --extra-libs=-lpthread --extra-libs=-lm --extra-libs=-ldl --extra-libs=-ldrm --bindir="$HOME/bin" --enable-shared --disable-static --disable-doc --enable-vaapi --enable-encoder=h264_vaapi --enable-vdpau --enable-cuda --enable-cuvid --enable-nvenc --enable-libnpp --enable-libx264 --enable-libx265 --enable-libdc1394 --enable-libxvid --enable-libvpx --enable-librtmp --enable-libfdk-aac --enable-libopus --enable-gpl --enable-nonfree --enable-libmfx

10, configure service https://doc.zeroc.com/ice/3.7/release-notes/using-the-linux-binary-distributions
   git clone -b 3.7 https://github.com/zeroc-ice/ice-demos.git

11, facesdk update script
#!/bin/sh

cp -f /mnt/hgfs/local/3rdParty/pcnrm_4.0.0/include/pcnrm.h /usr/local/facesdk/include
cp -f /mnt/hgfs/local/decoder_vs2015/hw_decoder/jpeg_coder.hpp /usr/local/facesdk/include
cp -f FaceSdk/FaceSdk.h /usr/local/facesdk/include

rm -fr Release_x64_gcc48/data
rm -f Release_x64_gcc48/pc.bin
rm -fr Release_x64_gcc48/facesdkdemo*
mv -f Release_x64_gcc48/model /usr/local/facesdk/

cp -fr -d Release_x64_gcc48/* /usr/local/facesdk/lib64/

12, prepare path
mkdir /usr/local/facesdk
mkdir /usr/local/facesdk/include
mkdir /usr/local/facesdk/model
mkdir /usr/local/facesdk/lib64

mkdir /usr/local/hw_decoder
mkdir /usr/local/hw_decoder/include
mkdir /usr/local/hw_decoder/lib64

mkdir /usr/local/decoder_lic
mkdir /usr/local/decoder_lic/include
mkdir /usr/local/decoder_lic/lib64

mkdir /usr/local/streamdecoder
mkdir /usr/local/streamdecoder/include
mkdir /usr/local/streamdecoder/lib64

mkdir /usr/local/facedetector
mkdir /usr/local/facedetector/include
mkdir /usr/local/facedetector/lib64

mkdir /usr/local/facecapture
mkdir /usr/local/facecapture/include
mkdir /usr/local/facecapture/lib64

13, port range
cat /proc/sys/net/ipv4/ip_local_port_range

14, osip2 && exOsip2
./configure --prefix=/usr/local/libosip --enable-shared=no --enable-trace=no CFLAGS=-fPIC CXXFLAGS=-fPIC CPPFLAGS=-fPIC
PKG_CONFIG_PATH="/usr/local/libosip/lib/pkgconfig" ./configure --prefix="/usr/local/libexosip" --enable-shared=no CFLAGS=-fPIC CXXFLAGS=-fPIC CPPFLAGS=-fPIC --enable-openssl=yes OSIP_LIBS="/usr/local/libosip/lib/libosip2.la /usr/local/libosip/lib/libosipparser2.la"


